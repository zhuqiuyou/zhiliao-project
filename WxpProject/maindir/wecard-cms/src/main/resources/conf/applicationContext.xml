<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans        
    						http://www.springframework.org/schema/beans/spring-beans-2.5.xsd        
    						http://www.springframework.org/schema/context        
   							http://www.springframework.org/schema/context/spring-context-2.5.xsd
   							http://www.springframework.org/schema/tx    
          					http://www.springframework.org/schema/tx/spring-tx-4.0.xsd 
     						http://www.springframework.org/schema/aop 
     						http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
   							http://www.springframework.org/schema/mvc  
						    http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">


	<!-- 默认的注解映射的支持 -->
	<context:component-scan base-package="com.cn.thinkx" />
    <context:annotation-config />

	<!-- 针对 Responsebody 转码 -->
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<bean class="com.cn.thinkx.core.util.UTF8StringHttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>

	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" lazy-init="true">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath:conf/jdbc.properties</value>
			</list>
		</property>
	</bean>

	<!-- JNDI方式配置数据源 -->
	<!-- <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> <property name="jndiName" value="${jndiName}"></property> </bean> -->

	<!-- 配置数据源 -->
	<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<!-- 初始化连接大小 -->
		<property name="initialSize" value="0" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="20" />
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="0" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="60000" />

		<!-- <property name="poolPreparedStatements" value="true" /> <property name="maxPoolPreparedStatementPerConnectionSize" value="33" /> -->

		<property name="validationQuery" value="${validationQuery}" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="25200000" />

		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true" />
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="1800" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />

		<!-- 监控数据库 -->
		<!-- <property name="filters" value="stat" /> -->
		<property name="filters" value="mergeStat" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:conf/mybatis-config.xml" />
		<property name="mapperLocations" value="classpath*:mapper/*.xml" />
	</bean>
	
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"> 
	  <constructor-arg index="0" ref="sqlSessionFactory" />  
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.cn.thinkx.*.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="do*" propagation="REQUIRED" isolation="SERIALIZABLE" />
			<tx:method name="delete*" propagation="REQUIRED" isolation="SERIALIZABLE" />
			<tx:method name="merge*" propagation="REQUIRED" isolation="SERIALIZABLE" />
			<tx:method name="add*" propagation="REQUIRED" isolation="SERIALIZABLE" />
			<tx:method name="update*" propagation="REQUIRED" isolation="SERIALIZABLE" />
			<tx:method name="enable*" propagation="REQUIRED" isolation="SERIALIZABLE" />
			<tx:method name="sync*" propagation="REQUIRED" isolation="SERIALIZABLE" />
			
			<tx:method name="get*" propagation="REQUIRED" isolation="READ_COMMITTED" read-only="true" />
			<tx:method name="find*" propagation="REQUIRED" isolation="READ_COMMITTED" read-only="true" />
			<tx:method name="list*" propagation="REQUIRED" isolation="READ_COMMITTED" read-only="true" />
			<tx:method name="load*" propagation="REQUIRED" isolation="READ_COMMITTED" read-only="true" />
			<tx:method name="search*" propagation="REQUIRED" isolation="READ_COMMITTED" read-only="true" />
			
			<tx:method name="*" propagation="REQUIRED" isolation="READ_COMMITTED" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="transactionPointcut" expression="execution(* com.cn.thinkx.*..service..*Impl.*(..))" />
		<aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice" />
	</aop:config>

	<context:component-scan base-package="com.cn.thinkx.*.service.impl" />
	
	<!-- 服务器启动时自动加载，目前主要提取加载需要缓存的公众号信息 -->
	<bean id="appServiceImpl" class="com.cn.thinkx.wxcms.AppDefineInitService"></bean>
	<bean id="beanDefineConfigue" class="com.cn.thinkx.core.spring.SpringBeanDefineConfigue">
		<property name="appService" ref="appServiceImpl"></property>
	</bean>

</beans>

